<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ajut="clr-namespace:AJut.UX"
                    xmlns:ap="clr-namespace:AJut.UX.AttachedProperties"
                    xmlns:conv="clr-namespace:AJut.UX.Converters"
                    xmlns:local="clr-namespace:AJut.UX.Controls">
    <Style TargetType="{x:Type local:ColorEditIngressControl}">
        <Setter Property="IsReadOnly" Value="{Binding RelativeSource={RelativeSource Self}, Path=(ap:Edit.IsReadOnly), Mode=OneWay}"/>
        <Setter Property="ap:BorderXTA.CornerRadius" Value="2"/>
        <Setter Property="Padding" Value="1" />
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="HighlightBorderBrush" Value="#186DBA"/>
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ColorEditIngressControl}">
                    <Border x:Name="ColorEditIngressRootBorder" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{ajut:TemplateBinding Path=(ap:BorderXTA.CornerRadius)}"
                            IsHitTestVisible="True">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:ColorEditIngressControl}}, Path=BorderBrush}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:ColorEditIngressControl}}, Path=ShowEditDisplay}" Value="True">
                                        <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:ColorEditIngressControl}}, Path=HighlightBorderBrush}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <Border x:Name="ColorDisplay" CornerRadius="{ajut:TemplateBinding Path=(ap:BorderXTA.CornerRadius)}"
                                    Margin="{TemplateBinding Padding}">
                                <Border.Background>
                                    <SolidColorBrush Color="{ajut:TemplateBinding Path=EditColor, Mode=OneWay}"/>
                                </Border.Background>
                            </Border>
                            <Grid x:Name="FancyCover">
                                <Grid.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                                        <GradientStop Offset="0.00" Color="#0C000000" />
                                        <GradientStop Offset="0.50" Color="#23000000" />
                                        <GradientStop Offset="0.50" Color="#25FFFFFF" />
                                        <GradientStop Offset="1.00" Color="#0CFFFFFF" />
                                    </LinearGradientBrush>
                                </Grid.Background>
                            </Grid>
                            <!--Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:ColorEditIngressControl}}, Path=EditColor, Mode=OneWay}"-->
                            <Popup PlacementTarget="{Binding ElementName=ColorDisplay}" HorizontalOffset="140" VerticalOffset="20"
                                   IsOpen="{ajut:TemplateBinding Path=ShowEditDisplay, Mode=TwoWay}"
                                   ap:PopupXTA.StaysOpenUnlessClickAway="True"
                                   AllowsTransparency="True">
                                <local:ColorValueEditControl EditColor="{ajut:TemplateBinding Path=EditColor, Mode=TwoWay}"
                                                             PreferShortStringHex="{ajut:TemplateBinding PreferShortStringHex}"
                                                             BorderThickness="3" Width="{ajut:TemplateBinding PopupWidth}"
                                                             IsReadOnly="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:ColorEditIngressControl}}, Path=IsReadOnly}"
                                                             BorderBrush="{ajut:TemplateBinding Path=HighlightBorderBrush}"/>
                            </Popup>
                            <Grid x:Name="EditOverlay" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                  Visibility="Collapsed"  Width="{TemplateBinding CornerBannerDimensions}" Height="{TemplateBinding CornerBannerDimensions}"
                                  SnapsToDevicePixels="True">
                                <Grid.Effect>
                                    <DropShadowEffect Direction="135" BlurRadius="25" ShadowDepth="3" Opacity="0.8"/>
                                </Grid.Effect>
                                <Viewbox Stretch="UniformToFill" Width="{TemplateBinding CornerBannerDimensions}" Height="{TemplateBinding CornerBannerDimensions}"
                                         Margin="0,0,-1,-1">
                                    <Path StrokeThickness="0.25" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat"
                                          Stroke="{Binding ElementName=ColorEditIngressRootBorder, Path=BorderBrush}"
                                          Fill="{Binding ElementName=ColorEditIngressRootBorder, Path=BorderBrush}">
                                        <Path.Data>
                                            <PathGeometry Figures="M 0.80075341 296.72639 209.65211 87.808966 c 0 0 -3.5e-4 135.234204 0 158.931344 4.9e-4 32.55561 0.50828 39.65184 -5.18724 45.11934 -5.64812 5.42198 -20.1867 5.01694 -53.589 4.82112 -51.290882 0.52382 -89.492656 0.0633 -150.07511659 0.0456 z" FillRule="NonZero"/>
                                        </Path.Data>
                                    </Path>
                                </Viewbox>
                                <TextBlock FontFamily="Segoe MDL2 Assets" Foreground="White" Opacity="0.7"
                                           HorizontalAlignment="Right" VerticalAlignment="Bottom" FontSize="{TemplateBinding CornerBannerIconFontSize}">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Text" Value="&#xE70F;"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:ColorEditIngressControl}}, Path=IsReadOnly}" Value="True">
                                                    <Setter Property="Text" Value="&#xE721;"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="FancyCover" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="EditOverlay" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ShowEditDisplay" Value="True">
                            <Setter TargetName="EditOverlay" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>